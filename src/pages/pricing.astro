---
import Layout from "@layouts/Layout.astro";
import Container from "@components/container.astro";
import Plans from "@components/pricing/plans.astro";
import Sectionhead from "@components/sectionhead.astro";
import { Plan, PlanGroups, PlanType } from "@components/pricing/shared";
import { getCollection } from "astro:content";
import { getActive } from "@utils/all";

interface PlanReducer {
  groups: PlanGroups;
  types: PlanType[];
}

// Filter active menbers (entries with draft: false, published before current date and expiration after current date)
const now = new Date;
const collection = await getCollection("prices", ({ data }) => getActive(data, now));
const {groups, types} = collection.reduce<PlanReducer>(({groups, types}, {data: plan}) => {
  const {type} = plan as Plan;
  if (type !== "custom" && !types.includes(type)) {
    types.push(type);
  }
  (groups[type] ||= []).push(plan as Plan);
  return {groups, types};
}, {groups: {}, types: []});
---

<Layout title="Pricing">
  <Container>
    <Sectionhead>
      <Fragment slot="title">Precios</Fragment>
      <Fragment slot="desc">
        <span class="text-center">Evita contratar personal para que desarrollen tus aplicaciones...</span>
        <span class="text-center">Deja que nosotros nos encarguemos de eso, y tú enfócate en tu negocio.</span>
      </Fragment>
    </Sectionhead>

    <Plans groups={groups} types={types} />
  </Container>
</Layout>
@components/pricing/plans.astro@components/pricing/shared
